#!/usr/bin/env python
"""igcommit - InnoGames Commit Validation Script

This the pre-receive script for Git repositories to validate pushed commits
on the server side.

Copyright (c) 2016, InnoGames GmbH
"""

from igcommit import commit_checks, file_checks
from igcommit.commit_list import CommitList
from igcommit.utils import iter_buffer

checks = CommitList.read_from_input().expand_checks_all([
    commit_checks.CheckDuplicateCommitSummaries(),
    commit_checks.CheckMisleadingMergeCommit(),
    commit_checks.CheckCommitMessage(),
    commit_checks.CheckCommitSummary(),
    commit_checks.CheckCommitTags(),
    commit_checks.CheckChangedFilePaths(),
    file_checks.CheckExecutable(),
    file_checks.CheckCommand(
        (
            'puppet',
            'parser',
            'validate',
            '--color=false',
            '--confdir=/tmp',
            '--vardir=/tmp',
        ),
        extension='pp',
    ),
    file_checks.CheckCommand(
        (
            'puppet-lint',
            '--fail-on-warnings',
            '--no-autoloader_layout-check',
            '/dev/stdin',
        ),
        extension='pp',
    ),
    file_checks.CheckCommand(
        ('flake8', '/dev/stdin'),
        extension='py',
    ),
    file_checks.CheckCommand(
        ('rubocop', '--format=emacs', '--stdin', '/dev/stdin'),
        extension='rb',
    ),
    file_checks.CheckCommand(
        ('shellcheck', '--format=gcc', '/dev/stdin'),
        extension='sh',
    ),
    file_checks.CheckCommandWithConfig(
        ('jscs', '--max-errors=-1', '--reporter=unix', '/dev/stdin'),
        extension='js',
        config_name='.jscs.json',
    ),
])
failed = False

# We are buffering the checks to let them run parallel in the background.
# Parallelization only applies to the CheckCommands.  It has no overhead,
# because we have to run those commands the same way externally, anyway.
# We only have a limit in there to avoid hitting OS's process limit.
for check in iter_buffer(checks, 32):
    check.print_problems()
    failed |= check.failed

if failed:
    raise SystemExit('Checks failed')
